create database forum;
use forum;

create table role(
	id int auto_increment primary key,
    role varchar(10) not null
);

create table status(
	id int auto_increment primary key,
    status varchar(10) not null
);

create table status_post(
	id int auto_increment primary key,
    status varchar(10) not null
);
create table status_reply(
	id int auto_increment primary key,
    status varchar(10) not null
);

create table status_category(
	id int auto_increment primary key,
    status varchar(10) not null
);
create table status_comment(
	id int auto_increment primary key,
    status varchar(10) not null
);

create table account_user(
	id int auto_increment primary key,
    username varchar(14) not null unique,
    password varchar(32) not null,
    id_role int default 0,
    status int default 1,
    foreign key(id_role) references role(id),
    foreign key(status) references status(id)
);	

create table profile(
	id int auto_increment primary key,
	full_name nvarchar(50),
    age int,
    address nvarchar(100),
    avatar varchar(200) default 'avatar.jpg',
    id_user int not null,
    foreign key (id_user) references account_user(id)
);

create table category(
	id int primary key auto_increment,
    link varchar(50) unique,
    category_name nvarchar(100) not null,
    status int default 0,
    foreign key(status) references status_category(id)
);


create table post(
	id int auto_increment primary key,
    title nvarchar(100) not null,
    sort_desctiption nvarchar(100) not null,
    long_description nvarchar(1000) not null,
    create_date datetime,
    update_date datetime,
    id_account int not null,
    id_status int default 0,
    id_category int not null,
    foreign key(id_account) references account_user(id),
	foreign key(id_status) references status_post(id),
    foreign key(id_category) references category(id)
);


create table like_post(
	id int auto_increment primary key,
    id_user int not null,
    id_post int not null,
	foreign key(id_user) references account_user(id),
    foreign key(id_post) references post(id)
);

create table comment(
	id int auto_increment primary key,
    content nvarchar(500) not null,
    id_user int not null,
    id_post int not null,
    id_status int default 0,
    create_date datetime,
    update_date datetime,
	foreign key(id_post) references post(id),
    foreign key(id_user) references account_user(id),
	foreign key(id_status) references status_comment(id)

);

create table like_comment(
	id int auto_increment primary key,
    id_user int not null,
    id_comment int not null,
	foreign key(id_user) references post(id),
    foreign key(id_comment) references comment(id)
);

create table reply_comment(
	id int auto_increment primary key,
    content nvarchar(500) default '',
    id_comment int not null,
    id_user int not null,
    id_reply int default 0,
    create_date datetime,
    update_date datetime,
    foreign key(id_comment) references comment(id),
	foreign key(id_user) references account_user(id),
	foreign key(id_reply) references status_reply(id)

);

create table image_desctiption_post(
	id int auto_increment primary key,
    image varchar(300) default 'default.jpg',
    id_post int not null,
    foreign key(id_post) references post(id)
);

create table image_desctiption_comment(
	id int auto_increment primary key,
    image varchar(300) default 'default.jpg',
    id_comment int not null,
    foreign key(id_comment) references comment(id)
);

create table image_desctiption_reply(
	id int auto_increment primary key,
    image varchar(300) default 'default.jpg',
    id_reply int not null,
    foreign key(id_reply) references reply_comment(id)
);

alter table reply_comment add column create_date datetime;
alter table reply_comment add column update_date datetime;
alter table category add column create_date datetime;
alter table category add column update_date datetime;
alter table post add column sort_description varchar(100);
insert into role values('admin');
insert into role values('user');







